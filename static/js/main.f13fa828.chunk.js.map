{"version":3,"sources":["components/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","slug","person","personSlug","useParams","to","classNames","sex","name","PeopleTable","people","isSelected","parents","parentName","parent","find","map","born","died","fatherName","motherName","PeoplePage","useState","isLoading","setIsLoading","isListEmpty","setIsListEmpty","isError","setIsError","setPeople","useEffect","getPeople","fetch","method","response","json","result","length","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"uQAAaA,EAAW,WAAH,OACnB,qBAAKC,UAAU,WAAW,UAAQ,WAAU,SAC1C,oBAAIA,UAAU,QAAO,SAAC,eAClB,E,4BCDKC,G,MAAS,WAAH,OACjB,qBAAKD,UAAU,SAAS,UAAQ,SAAQ,SACtC,qBAAKA,UAAU,qBACX,GCGKE,EAA6B,SAAH,GAAoB,IAErCC,EAFuBC,EAAM,EAANA,OACrCC,EAAaC,cAKnB,OACE,cAAC,IAAI,CACHC,IANgBJ,EAMDC,EAAOD,KALjBE,EAAWF,OAASA,EAMrB,YAAW,oBACEC,EAAOD,OACxBH,UAAWQ,IAAW,CACpB,kBAAkC,MAAfJ,EAAOK,MACzB,SAEFL,EAAOM,MAGd,ECjBaC,EAA+B,SAAH,GAAoB,IAAdC,EAAM,EAANA,OACvCP,EAAaC,cACbO,EAAa,SAACV,GAClB,OAAOE,EAAWF,OAASA,CAC7B,EAEMW,EAAU,SAACC,GACf,IAAMC,EAASJ,EAAOK,MAAK,SAACb,GAAM,OAAKA,EAAOM,OAASK,CAAU,IAEjE,OAAIC,EAEA,cAAC,EAAU,CAACZ,OAAQY,IAIjBD,GAAc,GACvB,EAEA,OACE,wBACE,UAAQ,cACRf,UAAU,uDAAsD,UAEhE,gCACE,+BACE,6BAAI,SACJ,6BAAI,QACJ,6BAAI,SACJ,6BAAI,SACJ,6BAAI,WACJ,6BAAI,gBAIR,gCAEIY,EAAOM,KAAI,SAACd,GACV,IACEM,EAOEN,EAPFM,KACAD,EAMEL,EANFK,IACAU,EAKEf,EALFe,KACAC,EAIEhB,EAJFgB,KACAC,EAGEjB,EAHFiB,WACAC,EAEElB,EAFFkB,WACAnB,EACEC,EADFD,KAGF,OACE,qBACE,UAAQ,SAERH,UAAWQ,IAAW,CACpB,yBAA0BK,EAAWV,KACpC,UAEH,6BACE,cAAC,EAAU,CACTC,OAAQA,MAIZ,6BAAKK,IACL,6BAAKU,IACL,6BAAKC,IACL,6BACGN,EAAQQ,KAGX,6BACGR,EAAQO,OAnBNX,EAuBX,QAKV,ECnFaa,EACE,WACb,MAAkCC,oBAAS,GAAK,mBAAzCC,EAAS,KAAEC,EAAY,KAC9B,EAAsCF,oBAAS,GAAM,mBAA9CG,EAAW,KAAEC,EAAc,KAClC,EAA8BJ,oBAAS,GAAM,mBAAtCK,EAAO,KAAEC,EAAU,KAC1B,EAA4BN,mBAAS,IAAG,mBAAjCZ,EAAM,KAAEmB,EAAS,KA8BxB,OA5BAC,qBAAU,WACR,IAAMC,EAAS,iDAAG,yHAESC,MACrB,oEAAqE,CACnEC,OAAQ,QAEV,KAAD,EAJa,OAARC,EAAQ,gBAMOA,EAASC,OAAO,KAAD,EAA9BC,EAAM,OAEZP,EAAUO,GACVZ,GAAa,GACS,IAAlBY,EAAOC,OACTX,GAAe,GAEfA,GAAe,GAChB,kDAEDE,GAAW,GACXF,GAAe,GACfF,GAAa,GAAO,0DAEvB,kBAtBc,mCAwBfO,GACF,GAAG,IAGD,sBAAKjC,UAAU,aAAa,UAAQ,aAAY,UAC9C,oBAAIA,UAAU,QAAO,SAAC,gBACtB,qBAAKA,UAAU,QAAO,SACpB,sBAAKA,UAAU,sBAAqB,UACjCyB,GAAa,cAAC,EAAM,IACpBE,GACC,mBAAG,UAAQ,kBAAiB,SAAC,sCAI9BE,GACC,mBAAG,UAAQ,qBAAqB7B,UAAU,kBAAiB,SAAC,0BAK5D2B,IAAgBE,IAAYJ,GAC5B,cAAC,EAAW,CACVb,OAAQA,WAOtB,ECzDa4B,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAK,UAChB,qBACE,UAAQ,MACRxC,UAAU,iCACVyC,KAAK,aACL,aAAW,kBAAiB,SAE5B,qBAAKzC,UAAU,YAAW,SACxB,sBAAKA,UAAU,eAAc,UAC3B,cAAC,IAAO,CACNA,UACE,gBAAG0C,EAAQ,EAARA,SAAQ,OAAOlC,IAChB,cAAe,CACb,8BAA+BkC,GAElC,EAEHnC,GAAG,MAAK,SACT,SAID,cAAC,IAAO,CACNP,UACE,gBAAG0C,EAAQ,EAARA,SAAQ,OAAOlC,IAChB,cAAe,CACb,8BAA+BkC,GAElC,EAEHnC,GAAG,YAAW,SACf,kBAMP,sBAAMP,UAAU,UAAS,SACvB,qBAAKA,UAAU,YAAW,SACxB,eAAC,IAAM,WACL,cAAC,IAAK,CAAC2C,KAAK,IAAIC,QAAS,cAAC,EAAQ,MAClC,cAAC,IAAK,CAACD,KAAK,QAAQC,QAAS,cAAC,IAAQ,CAACrC,GAAG,IAAIsC,SAAO,MACrD,cAAC,IAAK,CACJF,KAAK,UACLC,QACE,cAAC,EAAU,MAGf,cAAC,IAAK,CACJD,KAAK,gBACLC,QACE,cAAC,EAAU,MAGf,cAAC,IAAK,CACJD,KAAK,IACLC,QAAS,oBAAI5C,UAAU,QAAO,SAAC,8BAO7C,ECjEA8C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAM,UACL,cAAC,EAAG,M","file":"static/js/main.f13fa828.chunk.js","sourcesContent":["export const HomePage = () => (\n  <div className=\"HomePage\" data-cy=\"homePage\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  const personSlug = useParams();\n  const isSelected = (slug: string) => {\n    return personSlug.slug === slug;\n  };\n\n  return (\n    <Link\n      to={isSelected(person.slug)\n        ? '../people'\n        : `../people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const personSlug = useParams();\n  const isSelected = (slug: string) => {\n    return personSlug.slug === slug;\n  };\n\n  const parents = (parentName: string | null) => {\n    const parent = people.find((person) => person.name === parentName);\n\n    if (parent) {\n      return (\n        <PersonLink person={parent} />\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          people.map((person: Person) => {\n            const {\n              name,\n              sex,\n              born,\n              died,\n              fatherName,\n              motherName,\n              slug,\n            } = person;\n\n            return (\n              <tr\n                data-cy=\"person\"\n                key={name}\n                className={classNames({\n                  'has-background-warning': isSelected(slug),\n                })}\n              >\n                <td>\n                  <PersonLink\n                    person={person}\n                  />\n                </td>\n\n                <td>{sex}</td>\n                <td>{born}</td>\n                <td>{died}</td>\n                <td>\n                  {parents(motherName)}\n\n                </td>\n                <td>\n                  {parents(fatherName)}\n                </td>\n              </tr>\n            );\n          })\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage:\nReact.FC<{}> = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isListEmpty, setIsListEmpty] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    const getPeople = async () => {\n      try {\n        const response = await fetch(\n          'https://mate-academy.github.io/react_people-table/api/people.json', {\n            method: 'GET',\n          },\n        );\n\n        const result = await response.json();\n\n        setPeople(result);\n        setIsLoading(false);\n        if (result.length === 0) {\n          setIsListEmpty(true);\n        } else {\n          setIsListEmpty(false);\n        }\n      } catch (err) {\n        setIsError(true);\n        setIsListEmpty(false);\n        setIsLoading(false);\n      }\n    };\n\n    getPeople();\n  }, []);\n\n  return (\n    <div className=\"PeoplePage\" data-cy=\"peoplePage\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n          {isListEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isListEmpty && !isError && !isLoading && (\n            <PeopleTable\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  Routes, Route, NavLink, Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={\n                ({ isActive }) => classNames(\n                  'navbar-item', {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              }\n              to=\"../\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={\n                ({ isActive }) => classNames(\n                  'navbar-item', {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              }\n              to=\"../people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"/people\"\n              element={(\n                <PeoplePage />\n              )}\n            />\n            <Route\n              path=\"/people/:slug\"\n              element={(\n                <PeoplePage />\n              )}\n            />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}